//question 3 : findRotatedIndex

//starting with our main function, i initiated abinar sear

function findRotatedIndex(arr, num) {
    function findPivot(arr) {
        let start = 0;
        let end = arr.length - 1;

while (start < end) {
     let mid = Math.floor((start + end) / 2);

     if (mid < end && arr[mid] > arr[mid + 1]) {
                return mid;
            }

     if (mid > start && arr[mid] < arr[mid - 1]) {
                return mid - 1;
            }

     if (arr[start] >= arr[mid]) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }

        return start;
    }


//binary search func
    
function binarySearch(arr, start, end, num) {
       while (start <= end) {
           let mid = Math.floor((start + end) / 2);

            if (arr[mid] === num) {
                return mid;
    } else if (arr[mid] < num) {
                start = mid + 1;
    } else {
                end = mid - 1;
            }
        }

        return -1;
    }

    let pivot = findPivot(arr);

    if (pivot === 0 || num < arr[0]) {
        return binarySearch(arr, pivot, arr.length - 1, num);
    } else {
        return binarySearch(arr, 0, pivot, num);
    }
}

